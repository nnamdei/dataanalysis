
# coding: utf-8

# In[1]:


import numpy as np
import pandas as pd
import csv


# In[2]:


user_csv = pd.read_csv("user_data-1.csv")
followers_csv = pd.read_csv("followers.csv")
follow_csv = pd.read_csv("follows.csv")


# In[7]:


def get_user_category(user_polarity, followers_polarity, following_polarity):
    if user_polarity and followers_polarity == following_polarity:
        return following_polarity
    elif user_polarity and following_polarity == followers_polarity:
        return followers_polarity
    elif followers_polarity and following_polarity == user_polarity:
        return user_polarity 
    
def get_users_tweet(username):
    user_tweet = user_csv[user_csv["user"] == username]["tweets"]
    user_tweet = list(user_tweet)
    return user_tweet

def convertDictToCSV(dictionary):
    w = csv.writer(open("output.csv", "w"))
    for key, val in dictionary.items():
        w.writerow([key,val])
        return "Written to csv"

def get_maximum_class(username):
    l = []
    w = {}
    for x in user_csv[user_csv["user"] == username ]["class"]:
        l.append(x)
    for z in set(l):
        w[z] = l.count(z)
    return max(w)


def get_maximum_class_for_followers(username):
    l = []
    w = {}
    for x in followers_csv[followers_csv["user"] == username ]["labels"]:
        l.append(x)
    for z in set(l):
        w[z] = l.count(z)
    return max(w)
def get_maximum_class_for_followed_users(username):
    l = []
    w = {}
    for x in follow_csv[follow_csv["follows"] == username ]["labels"]:
        l.append(x)
    for z in set(l):
        w[z] = l.count(z)
    return max(w)

def get_followers_and_class_max(user):
    majority = []
    user_followers = set(followers_csv[followers_csv["follows"] == user]["user"])
    user_followers_class = set(followers_csv[followers_csv["follows"] == user]["labels"])
    for each_user in user_followers:
        majority.append(get_maximum_class_for_followers(each_user))
    return max(majority)

#Now Let's get for the number of people he follows:

def get_follow_follow_max(user):
    majority = []
    users_followed = set(follow_csv[follow_csv["user"] == user]["follows"])
    users_followed_class = set(follow_csv[follow_csv["user"] == user]["follows"])
    for each_user in users_followed:
        majority.append(get_maximum_class_for_followed_users(each_user))
    return max(majority)
test = []
for each_user in set(user_csv["user"]):
    try:
        followers_polarity = get_followers_and_class_max(each_user)
    except(ValueError):
        followers_polarity = 0
    try:
        following_polarity = get_follow_follow_max(each_user)
    except(ValueError):
        following_polarity = 0
    
    user_category = get_user_category(get_maximum_class(each_user), followers_polarity, following_polarity)
    users_tweet = get_users_tweet(each_user)
    data = {"User:": each_user, "Polarity: ": get_maximum_class(each_user), "Following Polarity: ": following_polarity,            "Followers Polarity: ": followers_polarity, "Users Category: ": user_category }
    test.append(data)
    
# print(test[0].keys())
# keys = test[0].keys()
# with open('work.csv', 'wb') as output_file:
#     dict_writer = csv.DictWriter(output_file, keys)
#     dict_writer.writeheader()
#     dict_writer.writerows(test)

